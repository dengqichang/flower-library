<template>
	<view class="__flower-svg">
		<!-- #ifdef APP -->
		<web-view v-if="isShow" class="__flower-web-view" :id="wv" @message="changeMessage" src="/uni_modules/flower-svg/hybrid/html/index.html" />
		<!-- @load="changeLoad" uni-app-x 4.0 版本后添加-->
		<image :src="png" :style="{width:`${width}rpx`,height:`${height}rpx`}" :mode="mode" :fade-show="fadeShow" :lazy-load="lazyLoad" :show-menu-by-longpress="showMenuByLongpress" :draggable="draggable" @error="changeError" />
		<!-- #endif -->
		<!-- #ifndef APP -->
		<!-- @load="changeLoad" uni-app-x 4.0 版本后添加-->
		<image :src="`data:image/svg+xml;charset=utf-8,${encodeURIComponent(src)}`" :style="{width:`${width}rpx`,height:`${height}rpx`}" :mode="mode" :fade-show="fadeShow" :lazy-load="lazyLoad" :show-menu-by-longpress="showMenuByLongpress" :draggable="draggable" @error="changeError" />
		<!-- #endif -->
	</view>
</template>

<script>
	/**
	 * flower-svg svg组件
	 * @description 一款适用于 uni-app / uni-app-x 的 SVG 组件。全端全版本适配。
	 * @tutorial 
	 * @property {String} src svg资源参数
	 * @property {String} width 宽度
	 * @property {String} height 高度
	 * @property {String} mode 图片裁剪、缩放的模式，默认值：scaleToFill
	 * @property {Boolean} fadeShow 图片显示动画效果，默认值：false，App-nvue 2.3.4+ Android有效、uni-app-x
	 * @property {Boolean} lazyLoad 图片懒加载。只针对page与scroll-view下的image有效，默认值：false，微信小程序、百度小程序、抖音小程序、飞书小程序
	 * @property {Boolean} showMenuByLongpress 开启长按图片显示识别小程序码菜单，默认值：false，微信小程序2.7.0
	 * @property {Boolean} draggable 是否能拖动图片，默认值：false，H5 3.1.1+、App（iOS15+）
	 */
	export default {
		data() {
			return {
				wv: this.uuid(32) as string,
				png: "" as any | null,
				webviewContext: null as WebviewContext | null,
				isShow: true as boolean
			}
		},
		props: {
			src: {
				type: String,
				default: ""
			},
			width: {
				type: String,
				default: "48"
			},
			height: {
				type: String,
				default: "48"
			},
			mode: {
				type: String,
				default: "scaleToFill"
			},
			fadeShow: {
				type: Boolean,
				default: false
			},
			lazyLoad: {
				type: Boolean,
				default: false
			},
			showMenuByLongpress: {
				type: Boolean,
				default: false
			},
			draggable: {
				type: Boolean,
				default: false
			}
		},
		watch: {
			src() {
				this.isShow = true;
			}
		},
		methods: {
			changeMessage(event : WebViewMessageEvent) {
				if ((event.detail.data?.get("isInitialize") ?? false) == true) {
					this.webviewContext = uni.createWebviewContext(this.wv, this);
					this.webviewContext?.evalJS(`onReceiveSvg('${this.src}')`);
				} else {
					this.png = event.detail.data?.get("png");
					this.isShow = false;
				};
			},
			uuid(length : number) : string {
				let uuid : string = "";
				let chars : string[] = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');
				for (let i = 0; i < length; i++) { uuid += chars[Math.floor(Math.random() * chars.length)]; };
				return uuid;
			},
			changeError(event : ImageErrorEvent) {
				this.$emit("error", event)
			},
			changeLoad(event : ImageErrorEvent) {
				this.$emit("load", event)
			}
		}
	}
</script>

<style scoped>
	.__flower-svg {
		display: flex;
	}

	.__flower-web-view {
		width: 0rpx;
		height: 0rpx;
	}
</style>