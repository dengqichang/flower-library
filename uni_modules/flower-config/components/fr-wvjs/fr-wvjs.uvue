<template>
	<web-view v-if="isInit" class="__flower-web-view" :id="wv" @message="changeMessageWv" src="/uni_modules/flower-config/hybrid/html/fr-wvjs.html" />
</template>

<script>
	import { cacheStore, pageStoreMap, tempStoreMap, webviewContextStoreMap, uuid, getCurrentPagesRoute } from "@/uni_modules/flower-config/uni-app-x/store/wvStore.uts";
	export default {
		data() {
			return {
				wv: uuid(32) as string,
				isInit: false as Boolean,
				getCurrentPagesRoute: getCurrentPagesRoute()
			}
		},
		props: {
			type: {
				type: String,
				default: "svg",
			},
			resourceId: {
				type: String,
				default: "",
				required: true
			},
			resource: {
				type: String,
				default: "",
				required: true
			}
		},
		created() {
			if (pageStoreMap.get(this.getCurrentPagesRoute) == null) {
				this.isInit = true;
				pageStoreMap.set(this.getCurrentPagesRoute as string, this.wv);
			};

			if (webviewContextStoreMap.get(this.getCurrentPagesRoute) == null) {
				if (cacheStore[this.resourceId] == null) {
					tempStoreMap.set(this.resourceId, this.resource);
				};
			} else {
				this.getwebviewContext(this.resourceId, this.resource);
			};
		},
		watch: {
			resource() {
				this.getwebviewContext(this.resourceId, this.resource);
			}
		},
		methods: {
			changeMessageWv(event : UniWebViewMessageEvent) {
				const _this = this;
				// #ifdef APP-IOS
				/* 暂时这样处理，需要等官方ios对齐android后再进行适配 */
				if (event.detail.isInitialize) {
					webviewContextStoreMap.set(this.getCurrentPagesRoute as string, uni.createWebviewContext(pageStoreMap.get(this.getCurrentPagesRoute) as string, this) as WebviewContext);
					tempStoreMap.forEach(function (value : string, key : string) {
						_this.getwebviewContext(key, value);
					});
				} else {
					cacheStore[event.detail.id] = event.detail.result;
					tempStoreMap.delete(event.detail.id as string);
				};
				// #endif
				// #ifdef APP-ANDROID
				if ((event.detail.data?.get("isInitialize") ?? false) == true) {
					webviewContextStoreMap.set(this.getCurrentPagesRoute as string, uni.createWebviewContext(pageStoreMap.get(this.getCurrentPagesRoute) as string, this) as WebviewContext);
					tempStoreMap.forEach(function (value : string, key : string) {
						_this.getwebviewContext(key, value);
					});
				} else {
					cacheStore[event.detail.data?.get("id") as string] = event.detail.data?.get("result") as string;
					tempStoreMap.delete(event.detail.data?.get("id") as string);
				};
				// #endif
			},
			getwebviewContext(resourceId : string, resource : string) {
				if (cacheStore[resourceId] == null) {
					webviewContextStoreMap.get(this.getCurrentPagesRoute)?.evalJS(`onPostMessage('${this.type}','${resourceId}','${resource}')`);
				};
			}
		},
		unmounted() {
			webviewContextStoreMap.delete(this.getCurrentPagesRoute as string);
			pageStoreMap.delete(this.getCurrentPagesRoute as string);
		}
	}
</script>

<style>
	.__flower-web-view {
		display: none;
		width: 0rpx;
		height: 0rpx;
	}
</style>